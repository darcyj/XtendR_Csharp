using System;
using CommandLine;
using CommandLine.Text;

namespace XtendR_Csharp
{
	public class ExtendR_Options {
		[Option('f', "fasta", Required = true, HelpText="Raw sequences filepath; fasta format; REQUIRED")]
		public string raw_reads_path_in { get; set; }

		[Option('s', "startContig", Required = true, HelpText="Starting contig filepath; fasta format; REQUIRED")]
		public string starting_contig_path_in { get; set; }

		[Option('k', "kmerLength", Required = true, HelpText="kmer length; integer; REQUIRED; suggest 20% of raw sequence length.")]
		public int kmerlength_in { get; set; }

		[Option('l', "lengthTarget", Required = true, HelpText="Target addition length; integer; REQUIRED.")]
		public int targetLength_in { get; set; }

		[Option('o', "output", Required = true, HelpText="Output filepath; fasta format; REQUIRED")]
		public string output_path_in { get; set; }

		[Option('c', "contigs", Required = false, DefaultValue = "not used", HelpText="Assembled contigs filepath; fasta format; optional.")]
		public string contigs_path_in { get; set; }

		[Option('p', "contigOverlap",  Required = false, DefaultValue=300, HelpText="Number of NTs that must match between a contig and the current assembled sequence for the contig to be added; integer; default=300")]
		public int contig_overlap_in { get; set; }
		
		[Option('y', "consensusThreshold",  Required = false, DefaultValue=3, HelpText="number of agreeing NTs required in an alignment column for consensus; integer; default=2.")]
		public int consensus_threshold_in { get; set; }

		[Option('m', "minKmerHits",  Required = false, DefaultValue=8, HelpText="Minimum number of kmer hits required for each iteration; integer; default=8")]
		public int min_kmer_hits_in { get; set; }

		[Option('r', "recoveryTrim",  Required = false, DefaultValue=45, HelpText="Number of NTs to trim if enough kmers can't be found; integer; default=45; suggest a bit more than kmer length.")]
		public int recovery_trim_in { get; set; }

		[Option('t', "threadsMax",  Required = false, DefaultValue=12, HelpText="Maximum number of CPU threads to be used for parallel kmer searches; integer; default=12")]
		public int nthreads_in { get; set; }

		[Option('q', "quiet",  Required = false, HelpText="Silences helpful messages generated by this program. Remember, the default verbose output IS your log (i.e. it's up to you to use >log.txt).")]
		public bool quiet_in { get; set; }

		[Option('x', "citation",  Required = false, HelpText="Displays citation information for this program.")]
		public bool citation_in { get; set; }

		[Option('j', "joke",  Required = false, HelpText="Tells you a funny joke before running the assembly.")]
		public bool joke_in { get; set; }

		[Option('h', "help",  Required = false, HelpText="Displays this friendly help dialog. Email me if you're having REAL trouble.")]
		public bool help_in { get; set; }

		[ParserState]
		public IParserState LastParserState { get; set; }

		[HelpOption]
		public string getusage(){
			return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));
		}

	}
}

